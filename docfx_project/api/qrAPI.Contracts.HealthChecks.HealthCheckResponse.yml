### YamlMime:ManagedReference
items:
- uid: qrAPI.Contracts.HealthChecks.HealthCheckResponse
  commentId: T:qrAPI.Contracts.HealthChecks.HealthCheckResponse
  id: HealthCheckResponse
  parent: qrAPI.Contracts.HealthChecks
  children:
  - qrAPI.Contracts.HealthChecks.HealthCheckResponse.Checks
  - qrAPI.Contracts.HealthChecks.HealthCheckResponse.Duration
  - qrAPI.Contracts.HealthChecks.HealthCheckResponse.Status
  langs:
  - csharp
  - vb
  name: HealthCheckResponse
  nameWithType: HealthCheckResponse
  fullName: qrAPI.Contracts.HealthChecks.HealthCheckResponse
  type: Class
  source:
    remote:
      path: src/qrAPI.Contracts/HealthChecks/HealthCheckResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: HealthCheckResponse
    path: ../../QrApi/src/qrAPI.Contracts/HealthChecks/HealthCheckResponse.cs
    startLine: 5
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.HealthChecks
  syntax:
    content: public class HealthCheckResponse
    content.vb: Public Class HealthCheckResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Status
  commentId: P:qrAPI.Contracts.HealthChecks.HealthCheckResponse.Status
  id: Status
  parent: qrAPI.Contracts.HealthChecks.HealthCheckResponse
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: HealthCheckResponse.Status
  fullName: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Status
  type: Property
  source:
    remote:
      path: src/qrAPI.Contracts/HealthChecks/HealthCheckResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: Status
    path: ../../QrApi/src/qrAPI.Contracts/HealthChecks/HealthCheckResponse.cs
    startLine: 7
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.HealthChecks
  syntax:
    content: public string Status { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Status As String
  overload: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Checks
  commentId: P:qrAPI.Contracts.HealthChecks.HealthCheckResponse.Checks
  id: Checks
  parent: qrAPI.Contracts.HealthChecks.HealthCheckResponse
  langs:
  - csharp
  - vb
  name: Checks
  nameWithType: HealthCheckResponse.Checks
  fullName: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Checks
  type: Property
  source:
    remote:
      path: src/qrAPI.Contracts/HealthChecks/HealthCheckResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: Checks
    path: ../../QrApi/src/qrAPI.Contracts/HealthChecks/HealthCheckResponse.cs
    startLine: 9
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.HealthChecks
  syntax:
    content: public IEnumerable<HealthCheck> Checks { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{qrAPI.Contracts.HealthChecks.HealthCheck}
    content.vb: Public Property Checks As IEnumerable(Of HealthCheck)
  overload: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Checks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Duration
  commentId: P:qrAPI.Contracts.HealthChecks.HealthCheckResponse.Duration
  id: Duration
  parent: qrAPI.Contracts.HealthChecks.HealthCheckResponse
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: HealthCheckResponse.Duration
  fullName: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Duration
  type: Property
  source:
    remote:
      path: src/qrAPI.Contracts/HealthChecks/HealthCheckResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: Duration
    path: ../../QrApi/src/qrAPI.Contracts/HealthChecks/HealthCheckResponse.cs
    startLine: 11
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.HealthChecks
  syntax:
    content: public TimeSpan Duration { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property Duration As TimeSpan
  overload: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Duration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: qrAPI.Contracts.HealthChecks
  commentId: N:qrAPI.Contracts.HealthChecks
  name: qrAPI.Contracts.HealthChecks
  nameWithType: qrAPI.Contracts.HealthChecks
  fullName: qrAPI.Contracts.HealthChecks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Status*
  commentId: Overload:qrAPI.Contracts.HealthChecks.HealthCheckResponse.Status
  name: Status
  nameWithType: HealthCheckResponse.Status
  fullName: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Status
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Checks*
  commentId: Overload:qrAPI.Contracts.HealthChecks.HealthCheckResponse.Checks
  name: Checks
  nameWithType: HealthCheckResponse.Checks
  fullName: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Checks
- uid: System.Collections.Generic.IEnumerable{qrAPI.Contracts.HealthChecks.HealthCheck}
  commentId: T:System.Collections.Generic.IEnumerable{qrAPI.Contracts.HealthChecks.HealthCheck}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<HealthCheck>
  nameWithType: IEnumerable<HealthCheck>
  fullName: System.Collections.Generic.IEnumerable<qrAPI.Contracts.HealthChecks.HealthCheck>
  nameWithType.vb: IEnumerable(Of HealthCheck)
  fullName.vb: System.Collections.Generic.IEnumerable(Of qrAPI.Contracts.HealthChecks.HealthCheck)
  name.vb: IEnumerable(Of HealthCheck)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: qrAPI.Contracts.HealthChecks.HealthCheck
    name: HealthCheck
    nameWithType: HealthCheck
    fullName: qrAPI.Contracts.HealthChecks.HealthCheck
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: qrAPI.Contracts.HealthChecks.HealthCheck
    name: HealthCheck
    nameWithType: HealthCheck
    fullName: qrAPI.Contracts.HealthChecks.HealthCheck
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Duration*
  commentId: Overload:qrAPI.Contracts.HealthChecks.HealthCheckResponse.Duration
  name: Duration
  nameWithType: HealthCheckResponse.Duration
  fullName: qrAPI.Contracts.HealthChecks.HealthCheckResponse.Duration
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan

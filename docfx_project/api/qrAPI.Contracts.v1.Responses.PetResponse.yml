### YamlMime:ManagedReference
items:
- uid: qrAPI.Contracts.v1.Responses.PetResponse
  commentId: T:qrAPI.Contracts.v1.Responses.PetResponse
  id: PetResponse
  parent: qrAPI.Contracts.v1.Responses
  children:
  - qrAPI.Contracts.v1.Responses.PetResponse.Birthdate
  - qrAPI.Contracts.v1.Responses.PetResponse.Breed
  - qrAPI.Contracts.v1.Responses.PetResponse.Gender
  - qrAPI.Contracts.v1.Responses.PetResponse.Id
  - qrAPI.Contracts.v1.Responses.PetResponse.Name
  - qrAPI.Contracts.v1.Responses.PetResponse.Owners
  - qrAPI.Contracts.v1.Responses.PetResponse.PictureUrl
  langs:
  - csharp
  - vb
  name: PetResponse
  nameWithType: PetResponse
  fullName: qrAPI.Contracts.v1.Responses.PetResponse
  type: Class
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/PetResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: PetResponse
    path: ../../QrApi/src/qrAPI.Contracts/v1/Responses/PetResponse.cs
    startLine: 7
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: public class PetResponse
    content.vb: Public Class PetResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Id
  commentId: P:qrAPI.Contracts.v1.Responses.PetResponse.Id
  id: Id
  parent: qrAPI.Contracts.v1.Responses.PetResponse
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: PetResponse.Id
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Id
  type: Property
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/PetResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: Id
    path: ../../QrApi/src/qrAPI.Contracts/v1/Responses/PetResponse.cs
    startLine: 9
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: >-
      [Key]

      public Guid Id { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <Key>

      Public Property Id As Guid
  overload: qrAPI.Contracts.v1.Responses.PetResponse.Id*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Name
  commentId: P:qrAPI.Contracts.v1.Responses.PetResponse.Name
  id: Name
  parent: qrAPI.Contracts.v1.Responses.PetResponse
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PetResponse.Name
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Name
  type: Property
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/PetResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: Name
    path: ../../QrApi/src/qrAPI.Contracts/v1/Responses/PetResponse.cs
    startLine: 11
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: qrAPI.Contracts.v1.Responses.PetResponse.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Birthdate
  commentId: P:qrAPI.Contracts.v1.Responses.PetResponse.Birthdate
  id: Birthdate
  parent: qrAPI.Contracts.v1.Responses.PetResponse
  langs:
  - csharp
  - vb
  name: Birthdate
  nameWithType: PetResponse.Birthdate
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Birthdate
  type: Property
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/PetResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: Birthdate
    path: ../../QrApi/src/qrAPI.Contracts/v1/Responses/PetResponse.cs
    startLine: 12
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: public DateTime Birthdate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property Birthdate As Date
  overload: qrAPI.Contracts.v1.Responses.PetResponse.Birthdate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Gender
  commentId: P:qrAPI.Contracts.v1.Responses.PetResponse.Gender
  id: Gender
  parent: qrAPI.Contracts.v1.Responses.PetResponse
  langs:
  - csharp
  - vb
  name: Gender
  nameWithType: PetResponse.Gender
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Gender
  type: Property
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/PetResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: Gender
    path: ../../QrApi/src/qrAPI.Contracts/v1/Responses/PetResponse.cs
    startLine: 13
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: >-
      [EnumDataType(typeof(Gender))]

      public Gender Gender { get; set; }
    parameters: []
    return:
      type: qrAPI.Contracts.v1.Requests.Gender
    content.vb: >-
      <EnumDataType(GetType(Gender))>

      Public Property Gender As Gender
  overload: qrAPI.Contracts.v1.Responses.PetResponse.Gender*
  attributes:
  - type: System.ComponentModel.DataAnnotations.EnumDataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.EnumDataTypeAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: qrAPI.Contracts.v1.Requests.Gender
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Breed
  commentId: P:qrAPI.Contracts.v1.Responses.PetResponse.Breed
  id: Breed
  parent: qrAPI.Contracts.v1.Responses.PetResponse
  langs:
  - csharp
  - vb
  name: Breed
  nameWithType: PetResponse.Breed
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Breed
  type: Property
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/PetResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: Breed
    path: ../../QrApi/src/qrAPI.Contracts/v1/Responses/PetResponse.cs
    startLine: 15
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: public string Breed { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Breed As String
  overload: qrAPI.Contracts.v1.Responses.PetResponse.Breed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Owners
  commentId: P:qrAPI.Contracts.v1.Responses.PetResponse.Owners
  id: Owners
  parent: qrAPI.Contracts.v1.Responses.PetResponse
  langs:
  - csharp
  - vb
  name: Owners
  nameWithType: PetResponse.Owners
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Owners
  type: Property
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/PetResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: Owners
    path: ../../QrApi/src/qrAPI.Contracts/v1/Responses/PetResponse.cs
    startLine: 16
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: public IEnumerable<UserResponse> Owners { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{qrAPI.Contracts.v1.Responses.UserResponse}
    content.vb: Public Property Owners As IEnumerable(Of UserResponse)
  overload: qrAPI.Contracts.v1.Responses.PetResponse.Owners*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: qrAPI.Contracts.v1.Responses.PetResponse.PictureUrl
  commentId: P:qrAPI.Contracts.v1.Responses.PetResponse.PictureUrl
  id: PictureUrl
  parent: qrAPI.Contracts.v1.Responses.PetResponse
  langs:
  - csharp
  - vb
  name: PictureUrl
  nameWithType: PetResponse.PictureUrl
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.PictureUrl
  type: Property
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/PetResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: PictureUrl
    path: ../../QrApi/src/qrAPI.Contracts/v1/Responses/PetResponse.cs
    startLine: 17
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: >-
      [Url]

      public string PictureUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Url>

      Public Property PictureUrl As String
  overload: qrAPI.Contracts.v1.Responses.PetResponse.PictureUrl*
  attributes:
  - type: System.ComponentModel.DataAnnotations.UrlAttribute
    ctor: System.ComponentModel.DataAnnotations.UrlAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: qrAPI.Contracts.v1.Responses
  commentId: N:qrAPI.Contracts.v1.Responses
  name: qrAPI.Contracts.v1.Responses
  nameWithType: qrAPI.Contracts.v1.Responses
  fullName: qrAPI.Contracts.v1.Responses
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Id*
  commentId: Overload:qrAPI.Contracts.v1.Responses.PetResponse.Id
  name: Id
  nameWithType: PetResponse.Id
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Name*
  commentId: Overload:qrAPI.Contracts.v1.Responses.PetResponse.Name
  name: Name
  nameWithType: PetResponse.Name
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Birthdate*
  commentId: Overload:qrAPI.Contracts.v1.Responses.PetResponse.Birthdate
  name: Birthdate
  nameWithType: PetResponse.Birthdate
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Birthdate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Gender*
  commentId: Overload:qrAPI.Contracts.v1.Responses.PetResponse.Gender
  name: Gender
  nameWithType: PetResponse.Gender
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Gender
- uid: qrAPI.Contracts.v1.Requests.Gender
  commentId: T:qrAPI.Contracts.v1.Requests.Gender
  parent: qrAPI.Contracts.v1.Requests
  name: Gender
  nameWithType: Gender
  fullName: qrAPI.Contracts.v1.Requests.Gender
- uid: qrAPI.Contracts.v1.Requests
  commentId: N:qrAPI.Contracts.v1.Requests
  name: qrAPI.Contracts.v1.Requests
  nameWithType: qrAPI.Contracts.v1.Requests
  fullName: qrAPI.Contracts.v1.Requests
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Breed*
  commentId: Overload:qrAPI.Contracts.v1.Responses.PetResponse.Breed
  name: Breed
  nameWithType: PetResponse.Breed
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Breed
- uid: qrAPI.Contracts.v1.Responses.PetResponse.Owners*
  commentId: Overload:qrAPI.Contracts.v1.Responses.PetResponse.Owners
  name: Owners
  nameWithType: PetResponse.Owners
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.Owners
- uid: System.Collections.Generic.IEnumerable{qrAPI.Contracts.v1.Responses.UserResponse}
  commentId: T:System.Collections.Generic.IEnumerable{qrAPI.Contracts.v1.Responses.UserResponse}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UserResponse>
  nameWithType: IEnumerable<UserResponse>
  fullName: System.Collections.Generic.IEnumerable<qrAPI.Contracts.v1.Responses.UserResponse>
  nameWithType.vb: IEnumerable(Of UserResponse)
  fullName.vb: System.Collections.Generic.IEnumerable(Of qrAPI.Contracts.v1.Responses.UserResponse)
  name.vb: IEnumerable(Of UserResponse)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: qrAPI.Contracts.v1.Responses.UserResponse
    name: UserResponse
    nameWithType: UserResponse
    fullName: qrAPI.Contracts.v1.Responses.UserResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: qrAPI.Contracts.v1.Responses.UserResponse
    name: UserResponse
    nameWithType: UserResponse
    fullName: qrAPI.Contracts.v1.Responses.UserResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: qrAPI.Contracts.v1.Responses.PetResponse.PictureUrl*
  commentId: Overload:qrAPI.Contracts.v1.Responses.PetResponse.PictureUrl
  name: PictureUrl
  nameWithType: PetResponse.PictureUrl
  fullName: qrAPI.Contracts.v1.Responses.PetResponse.PictureUrl

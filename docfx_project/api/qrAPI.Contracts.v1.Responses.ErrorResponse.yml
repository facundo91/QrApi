### YamlMime:ManagedReference
items:
- uid: qrAPI.Contracts.v1.Responses.ErrorResponse
  commentId: T:qrAPI.Contracts.v1.Responses.ErrorResponse
  id: ErrorResponse
  parent: qrAPI.Contracts.v1.Responses
  children:
  - qrAPI.Contracts.v1.Responses.ErrorResponse.#ctor
  - qrAPI.Contracts.v1.Responses.ErrorResponse.#ctor(qrAPI.Contracts.v1.Responses.ErrorModel)
  - qrAPI.Contracts.v1.Responses.ErrorResponse.Errors
  langs:
  - csharp
  - vb
  name: ErrorResponse
  nameWithType: ErrorResponse
  fullName: qrAPI.Contracts.v1.Responses.ErrorResponse
  type: Class
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/ErrorResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: ErrorResponse
    path: ../src/qrAPI.Contracts/v1/Responses/ErrorResponse.cs
    startLine: 4
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: public class ErrorResponse
    content.vb: Public Class ErrorResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: qrAPI.Contracts.v1.Responses.ErrorResponse.#ctor
  commentId: M:qrAPI.Contracts.v1.Responses.ErrorResponse.#ctor
  id: '#ctor'
  parent: qrAPI.Contracts.v1.Responses.ErrorResponse
  langs:
  - csharp
  - vb
  name: ErrorResponse()
  nameWithType: ErrorResponse.ErrorResponse()
  fullName: qrAPI.Contracts.v1.Responses.ErrorResponse.ErrorResponse()
  type: Constructor
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/ErrorResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: .ctor
    path: ../src/qrAPI.Contracts/v1/Responses/ErrorResponse.cs
    startLine: 6
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: public ErrorResponse()
    content.vb: Public Sub New
  overload: qrAPI.Contracts.v1.Responses.ErrorResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: qrAPI.Contracts.v1.Responses.ErrorResponse.#ctor(qrAPI.Contracts.v1.Responses.ErrorModel)
  commentId: M:qrAPI.Contracts.v1.Responses.ErrorResponse.#ctor(qrAPI.Contracts.v1.Responses.ErrorModel)
  id: '#ctor(qrAPI.Contracts.v1.Responses.ErrorModel)'
  parent: qrAPI.Contracts.v1.Responses.ErrorResponse
  langs:
  - csharp
  - vb
  name: ErrorResponse(ErrorModel)
  nameWithType: ErrorResponse.ErrorResponse(ErrorModel)
  fullName: qrAPI.Contracts.v1.Responses.ErrorResponse.ErrorResponse(qrAPI.Contracts.v1.Responses.ErrorModel)
  type: Constructor
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/ErrorResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: .ctor
    path: ../src/qrAPI.Contracts/v1/Responses/ErrorResponse.cs
    startLine: 10
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: public ErrorResponse(ErrorModel error)
    parameters:
    - id: error
      type: qrAPI.Contracts.v1.Responses.ErrorModel
    content.vb: Public Sub New(error As ErrorModel)
  overload: qrAPI.Contracts.v1.Responses.ErrorResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: qrAPI.Contracts.v1.Responses.ErrorResponse.Errors
  commentId: P:qrAPI.Contracts.v1.Responses.ErrorResponse.Errors
  id: Errors
  parent: qrAPI.Contracts.v1.Responses.ErrorResponse
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: ErrorResponse.Errors
  fullName: qrAPI.Contracts.v1.Responses.ErrorResponse.Errors
  type: Property
  source:
    remote:
      path: src/qrAPI.Contracts/v1/Responses/ErrorResponse.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: Errors
    path: ../src/qrAPI.Contracts/v1/Responses/ErrorResponse.cs
    startLine: 15
  assemblies:
  - qrAPI.Contracts
  namespace: qrAPI.Contracts.v1.Responses
  syntax:
    content: public List<ErrorModel> Errors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{qrAPI.Contracts.v1.Responses.ErrorModel}
    content.vb: Public Property Errors As List(Of ErrorModel)
  overload: qrAPI.Contracts.v1.Responses.ErrorResponse.Errors*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: qrAPI.Contracts.v1.Responses
  commentId: N:qrAPI.Contracts.v1.Responses
  name: qrAPI.Contracts.v1.Responses
  nameWithType: qrAPI.Contracts.v1.Responses
  fullName: qrAPI.Contracts.v1.Responses
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: qrAPI.Contracts.v1.Responses.ErrorResponse.#ctor*
  commentId: Overload:qrAPI.Contracts.v1.Responses.ErrorResponse.#ctor
  name: ErrorResponse
  nameWithType: ErrorResponse.ErrorResponse
  fullName: qrAPI.Contracts.v1.Responses.ErrorResponse.ErrorResponse
- uid: qrAPI.Contracts.v1.Responses.ErrorModel
  commentId: T:qrAPI.Contracts.v1.Responses.ErrorModel
  parent: qrAPI.Contracts.v1.Responses
  name: ErrorModel
  nameWithType: ErrorModel
  fullName: qrAPI.Contracts.v1.Responses.ErrorModel
- uid: qrAPI.Contracts.v1.Responses.ErrorResponse.Errors*
  commentId: Overload:qrAPI.Contracts.v1.Responses.ErrorResponse.Errors
  name: Errors
  nameWithType: ErrorResponse.Errors
  fullName: qrAPI.Contracts.v1.Responses.ErrorResponse.Errors
- uid: System.Collections.Generic.List{qrAPI.Contracts.v1.Responses.ErrorModel}
  commentId: T:System.Collections.Generic.List{qrAPI.Contracts.v1.Responses.ErrorModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ErrorModel>
  nameWithType: List<ErrorModel>
  fullName: System.Collections.Generic.List<qrAPI.Contracts.v1.Responses.ErrorModel>
  nameWithType.vb: List(Of ErrorModel)
  fullName.vb: System.Collections.Generic.List(Of qrAPI.Contracts.v1.Responses.ErrorModel)
  name.vb: List(Of ErrorModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: qrAPI.Contracts.v1.Responses.ErrorModel
    name: ErrorModel
    nameWithType: ErrorModel
    fullName: qrAPI.Contracts.v1.Responses.ErrorModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: qrAPI.Contracts.v1.Responses.ErrorModel
    name: ErrorModel
    nameWithType: ErrorModel
    fullName: qrAPI.Contracts.v1.Responses.ErrorModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

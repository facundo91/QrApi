### YamlMime:ManagedReference
items:
- uid: qrAPI.App.Services.Implementations.QrService
  commentId: T:qrAPI.App.Services.Implementations.QrService
  id: QrService
  parent: qrAPI.App.Services.Implementations
  children:
  - qrAPI.App.Services.Implementations.QrService.#ctor(AutoMapper.IMapper,qrAPI.DAL.Daos.Interfaces.IRepository{qrAPI.DAL.Dtos.QrDto},qrAPI.Infra.Mail.IMailBroker,qrAPI.App.Services.Interfaces.IGenericService{qrAPI.App.Domain.Pet},qrAPI.App.Services.Interfaces.IIdentityService,Microsoft.Extensions.Logging.ILogger{qrAPI.App.Services.Implementations.QrService})
  - qrAPI.App.Services.Implementations.QrService.ScanQr(System.Guid)
  langs:
  - csharp
  - vb
  name: QrService
  nameWithType: QrService
  fullName: qrAPI.App.Services.Implementations.QrService
  type: Class
  source:
    remote:
      path: src/qrAPI.App/Services/Implementations/QrService.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: QrService
    path: ../src/qrAPI.App/Services/Implementations/QrService.cs
    startLine: 14
  assemblies:
  - qrAPI.App
  namespace: qrAPI.App.Services.Implementations
  syntax:
    content: 'public class QrService : AbstractGenericService<Qr, QrDto>, IQrService, IGenericService<Qr>'
    content.vb: >-
      Public Class QrService

          Inherits AbstractGenericService(Of Qr, QrDto)

          Implements IQrService, IGenericService(Of Qr)
  inheritance:
  - System.Object
  - qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}
  implements:
  - qrAPI.App.Services.Interfaces.IQrService
  - qrAPI.App.Services.Interfaces.IGenericService{qrAPI.App.Domain.Qr}
  inheritedMembers:
  - qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.Mapper
  - qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.GetAllAsync
  - qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.GetByIdAsync(System.Guid)
  - qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.CreateAsync(qrAPI.App.Domain.Qr)
  - qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.UpdateAsync(System.Guid,qrAPI.App.Domain.Qr)
  - qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.DeleteAsync(System.Guid)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: qrAPI.App.Services.Implementations.QrService.#ctor(AutoMapper.IMapper,qrAPI.DAL.Daos.Interfaces.IRepository{qrAPI.DAL.Dtos.QrDto},qrAPI.Infra.Mail.IMailBroker,qrAPI.App.Services.Interfaces.IGenericService{qrAPI.App.Domain.Pet},qrAPI.App.Services.Interfaces.IIdentityService,Microsoft.Extensions.Logging.ILogger{qrAPI.App.Services.Implementations.QrService})
  commentId: M:qrAPI.App.Services.Implementations.QrService.#ctor(AutoMapper.IMapper,qrAPI.DAL.Daos.Interfaces.IRepository{qrAPI.DAL.Dtos.QrDto},qrAPI.Infra.Mail.IMailBroker,qrAPI.App.Services.Interfaces.IGenericService{qrAPI.App.Domain.Pet},qrAPI.App.Services.Interfaces.IIdentityService,Microsoft.Extensions.Logging.ILogger{qrAPI.App.Services.Implementations.QrService})
  id: '#ctor(AutoMapper.IMapper,qrAPI.DAL.Daos.Interfaces.IRepository{qrAPI.DAL.Dtos.QrDto},qrAPI.Infra.Mail.IMailBroker,qrAPI.App.Services.Interfaces.IGenericService{qrAPI.App.Domain.Pet},qrAPI.App.Services.Interfaces.IIdentityService,Microsoft.Extensions.Logging.ILogger{qrAPI.App.Services.Implementations.QrService})'
  parent: qrAPI.App.Services.Implementations.QrService
  langs:
  - csharp
  - vb
  name: QrService(IMapper, IRepository<QrDto>, IMailBroker, IGenericService<Pet>, IIdentityService, ILogger<QrService>)
  nameWithType: QrService.QrService(IMapper, IRepository<QrDto>, IMailBroker, IGenericService<Pet>, IIdentityService, ILogger<QrService>)
  fullName: qrAPI.App.Services.Implementations.QrService.QrService(AutoMapper.IMapper, qrAPI.DAL.Daos.Interfaces.IRepository<qrAPI.DAL.Dtos.QrDto>, qrAPI.Infra.Mail.IMailBroker, qrAPI.App.Services.Interfaces.IGenericService<qrAPI.App.Domain.Pet>, qrAPI.App.Services.Interfaces.IIdentityService, Microsoft.Extensions.Logging.ILogger<qrAPI.App.Services.Implementations.QrService>)
  type: Constructor
  source:
    remote:
      path: src/qrAPI.App/Services/Implementations/QrService.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: .ctor
    path: ../src/qrAPI.App/Services/Implementations/QrService.cs
    startLine: 20
  assemblies:
  - qrAPI.App
  namespace: qrAPI.App.Services.Implementations
  syntax:
    content: public QrService(IMapper mapper, IRepository<QrDto> repository, IMailBroker mailService, IGenericService<Pet> petService, IIdentityService identityService, ILogger<QrService> logger)
    parameters:
    - id: mapper
      type: AutoMapper.IMapper
    - id: repository
      type: qrAPI.DAL.Daos.Interfaces.IRepository{qrAPI.DAL.Dtos.QrDto}
    - id: mailService
      type: qrAPI.Infra.Mail.IMailBroker
    - id: petService
      type: qrAPI.App.Services.Interfaces.IGenericService{qrAPI.App.Domain.Pet}
    - id: identityService
      type: qrAPI.App.Services.Interfaces.IIdentityService
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{qrAPI.App.Services.Implementations.QrService}
    content.vb: Public Sub New(mapper As IMapper, repository As IRepository(Of QrDto), mailService As IMailBroker, petService As IGenericService(Of Pet), identityService As IIdentityService, logger As ILogger(Of QrService))
  overload: qrAPI.App.Services.Implementations.QrService.#ctor*
  nameWithType.vb: QrService.QrService(IMapper, IRepository(Of QrDto), IMailBroker, IGenericService(Of Pet), IIdentityService, ILogger(Of QrService))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: qrAPI.App.Services.Implementations.QrService.QrService(AutoMapper.IMapper, qrAPI.DAL.Daos.Interfaces.IRepository(Of qrAPI.DAL.Dtos.QrDto), qrAPI.Infra.Mail.IMailBroker, qrAPI.App.Services.Interfaces.IGenericService(Of qrAPI.App.Domain.Pet), qrAPI.App.Services.Interfaces.IIdentityService, Microsoft.Extensions.Logging.ILogger(Of qrAPI.App.Services.Implementations.QrService))
  name.vb: QrService(IMapper, IRepository(Of QrDto), IMailBroker, IGenericService(Of Pet), IIdentityService, ILogger(Of QrService))
- uid: qrAPI.App.Services.Implementations.QrService.ScanQr(System.Guid)
  commentId: M:qrAPI.App.Services.Implementations.QrService.ScanQr(System.Guid)
  id: ScanQr(System.Guid)
  parent: qrAPI.App.Services.Implementations.QrService
  langs:
  - csharp
  - vb
  name: ScanQr(Guid)
  nameWithType: QrService.ScanQr(Guid)
  fullName: qrAPI.App.Services.Implementations.QrService.ScanQr(System.Guid)
  type: Method
  source:
    remote:
      path: src/qrAPI.App/Services/Implementations/QrService.cs
      branch: master
      repo: https://github.com/facundo91/QrApi.git
    id: ScanQr
    path: ../src/qrAPI.App/Services/Implementations/QrService.cs
    startLine: 34
  assemblies:
  - qrAPI.App
  namespace: qrAPI.App.Services.Implementations
  syntax:
    content: public Task ScanQr(Guid qrId)
    parameters:
    - id: qrId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ScanQr(qrId As Guid) As Task
  overload: qrAPI.App.Services.Implementations.QrService.ScanQr*
  implements:
  - qrAPI.App.Services.Interfaces.IQrService.ScanQr(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: qrAPI.App.Services.Implementations
  commentId: N:qrAPI.App.Services.Implementations
  name: qrAPI.App.Services.Implementations
  nameWithType: qrAPI.App.Services.Implementations
  fullName: qrAPI.App.Services.Implementations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}
  commentId: T:qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}
  parent: qrAPI.App.Services.Implementations
  definition: qrAPI.App.Services.Implementations.AbstractGenericService`2
  name: AbstractGenericService<Qr, QrDto>
  nameWithType: AbstractGenericService<Qr, QrDto>
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>
  nameWithType.vb: AbstractGenericService(Of Qr, QrDto)
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto)
  name.vb: AbstractGenericService(Of Qr, QrDto)
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2
    name: AbstractGenericService
    nameWithType: AbstractGenericService
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService
  - name: <
    nameWithType: <
    fullName: <
  - uid: qrAPI.App.Domain.Qr
    name: Qr
    nameWithType: Qr
    fullName: qrAPI.App.Domain.Qr
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: qrAPI.DAL.Dtos.QrDto
    name: QrDto
    nameWithType: QrDto
    fullName: qrAPI.DAL.Dtos.QrDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2
    name: AbstractGenericService
    nameWithType: AbstractGenericService
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: qrAPI.App.Domain.Qr
    name: Qr
    nameWithType: Qr
    fullName: qrAPI.App.Domain.Qr
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: qrAPI.DAL.Dtos.QrDto
    name: QrDto
    nameWithType: QrDto
    fullName: qrAPI.DAL.Dtos.QrDto
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Interfaces.IQrService
  commentId: T:qrAPI.App.Services.Interfaces.IQrService
  parent: qrAPI.App.Services.Interfaces
  name: IQrService
  nameWithType: IQrService
  fullName: qrAPI.App.Services.Interfaces.IQrService
- uid: qrAPI.App.Services.Interfaces.IGenericService{qrAPI.App.Domain.Qr}
  commentId: T:qrAPI.App.Services.Interfaces.IGenericService{qrAPI.App.Domain.Qr}
  parent: qrAPI.App.Services.Interfaces
  definition: qrAPI.App.Services.Interfaces.IGenericService`1
  name: IGenericService<Qr>
  nameWithType: IGenericService<Qr>
  fullName: qrAPI.App.Services.Interfaces.IGenericService<qrAPI.App.Domain.Qr>
  nameWithType.vb: IGenericService(Of Qr)
  fullName.vb: qrAPI.App.Services.Interfaces.IGenericService(Of qrAPI.App.Domain.Qr)
  name.vb: IGenericService(Of Qr)
  spec.csharp:
  - uid: qrAPI.App.Services.Interfaces.IGenericService`1
    name: IGenericService
    nameWithType: IGenericService
    fullName: qrAPI.App.Services.Interfaces.IGenericService
  - name: <
    nameWithType: <
    fullName: <
  - uid: qrAPI.App.Domain.Qr
    name: Qr
    nameWithType: Qr
    fullName: qrAPI.App.Domain.Qr
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: qrAPI.App.Services.Interfaces.IGenericService`1
    name: IGenericService
    nameWithType: IGenericService
    fullName: qrAPI.App.Services.Interfaces.IGenericService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: qrAPI.App.Domain.Qr
    name: Qr
    nameWithType: Qr
    fullName: qrAPI.App.Domain.Qr
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.Mapper
  commentId: F:qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.Mapper
  parent: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}
  definition: qrAPI.App.Services.Implementations.AbstractGenericService`2.Mapper
  name: Mapper
  nameWithType: AbstractGenericService<Qr, QrDto>.Mapper
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>.Mapper
  nameWithType.vb: AbstractGenericService(Of Qr, QrDto).Mapper
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto).Mapper
- uid: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.GetAllAsync
  commentId: M:qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.GetAllAsync
  parent: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}
  definition: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetAllAsync
  name: GetAllAsync()
  nameWithType: AbstractGenericService<Qr, QrDto>.GetAllAsync()
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>.GetAllAsync()
  nameWithType.vb: AbstractGenericService(Of Qr, QrDto).GetAllAsync()
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto).GetAllAsync()
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetAllAsync
    name: GetAllAsync
    nameWithType: AbstractGenericService<Qr, QrDto>.GetAllAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>.GetAllAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetAllAsync
    name: GetAllAsync
    nameWithType: AbstractGenericService(Of Qr, QrDto).GetAllAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto).GetAllAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.GetByIdAsync(System.Guid)
  commentId: M:qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.GetByIdAsync(System.Guid)
  parent: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}
  definition: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetByIdAsync(System.Guid)
  name: GetByIdAsync(Guid)
  nameWithType: AbstractGenericService<Qr, QrDto>.GetByIdAsync(Guid)
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>.GetByIdAsync(System.Guid)
  nameWithType.vb: AbstractGenericService(Of Qr, QrDto).GetByIdAsync(Guid)
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto).GetByIdAsync(System.Guid)
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetByIdAsync(System.Guid)
    name: GetByIdAsync
    nameWithType: AbstractGenericService<Qr, QrDto>.GetByIdAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>.GetByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetByIdAsync(System.Guid)
    name: GetByIdAsync
    nameWithType: AbstractGenericService(Of Qr, QrDto).GetByIdAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto).GetByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.CreateAsync(qrAPI.App.Domain.Qr)
  commentId: M:qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.CreateAsync(qrAPI.App.Domain.Qr)
  parent: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}
  definition: qrAPI.App.Services.Implementations.AbstractGenericService`2.CreateAsync(`0)
  name: CreateAsync(Qr)
  nameWithType: AbstractGenericService<Qr, QrDto>.CreateAsync(Qr)
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>.CreateAsync(qrAPI.App.Domain.Qr)
  nameWithType.vb: AbstractGenericService(Of Qr, QrDto).CreateAsync(Qr)
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto).CreateAsync(qrAPI.App.Domain.Qr)
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.CreateAsync(`0)
    name: CreateAsync
    nameWithType: AbstractGenericService<Qr, QrDto>.CreateAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: qrAPI.App.Domain.Qr
    name: Qr
    nameWithType: Qr
    fullName: qrAPI.App.Domain.Qr
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.CreateAsync(`0)
    name: CreateAsync
    nameWithType: AbstractGenericService(Of Qr, QrDto).CreateAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: qrAPI.App.Domain.Qr
    name: Qr
    nameWithType: Qr
    fullName: qrAPI.App.Domain.Qr
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.UpdateAsync(System.Guid,qrAPI.App.Domain.Qr)
  commentId: M:qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.UpdateAsync(System.Guid,qrAPI.App.Domain.Qr)
  parent: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}
  definition: qrAPI.App.Services.Implementations.AbstractGenericService`2.UpdateAsync(System.Guid,`0)
  name: UpdateAsync(Guid, Qr)
  nameWithType: AbstractGenericService<Qr, QrDto>.UpdateAsync(Guid, Qr)
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>.UpdateAsync(System.Guid, qrAPI.App.Domain.Qr)
  nameWithType.vb: AbstractGenericService(Of Qr, QrDto).UpdateAsync(Guid, Qr)
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto).UpdateAsync(System.Guid, qrAPI.App.Domain.Qr)
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.UpdateAsync(System.Guid,`0)
    name: UpdateAsync
    nameWithType: AbstractGenericService<Qr, QrDto>.UpdateAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: qrAPI.App.Domain.Qr
    name: Qr
    nameWithType: Qr
    fullName: qrAPI.App.Domain.Qr
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.UpdateAsync(System.Guid,`0)
    name: UpdateAsync
    nameWithType: AbstractGenericService(Of Qr, QrDto).UpdateAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: qrAPI.App.Domain.Qr
    name: Qr
    nameWithType: Qr
    fullName: qrAPI.App.Domain.Qr
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.DeleteAsync(System.Guid)
  commentId: M:qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}.DeleteAsync(System.Guid)
  parent: qrAPI.App.Services.Implementations.AbstractGenericService{qrAPI.App.Domain.Qr,qrAPI.DAL.Dtos.QrDto}
  definition: qrAPI.App.Services.Implementations.AbstractGenericService`2.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  nameWithType: AbstractGenericService<Qr, QrDto>.DeleteAsync(Guid)
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>.DeleteAsync(System.Guid)
  nameWithType.vb: AbstractGenericService(Of Qr, QrDto).DeleteAsync(Guid)
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto).DeleteAsync(System.Guid)
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.DeleteAsync(System.Guid)
    name: DeleteAsync
    nameWithType: AbstractGenericService<Qr, QrDto>.DeleteAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService<qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.DeleteAsync(System.Guid)
    name: DeleteAsync
    nameWithType: AbstractGenericService(Of Qr, QrDto).DeleteAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService(Of qrAPI.App.Domain.Qr, qrAPI.DAL.Dtos.QrDto).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: qrAPI.App.Services.Implementations.AbstractGenericService`2
  commentId: T:qrAPI.App.Services.Implementations.AbstractGenericService`2
  name: AbstractGenericService<TDomainObject, TDto>
  nameWithType: AbstractGenericService<TDomainObject, TDto>
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>
  nameWithType.vb: AbstractGenericService(Of TDomainObject, TDto)
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto)
  name.vb: AbstractGenericService(Of TDomainObject, TDto)
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2
    name: AbstractGenericService
    nameWithType: AbstractGenericService
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService
  - name: <
    nameWithType: <
    fullName: <
  - name: TDomainObject
    nameWithType: TDomainObject
    fullName: TDomainObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDto
    nameWithType: TDto
    fullName: TDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2
    name: AbstractGenericService
    nameWithType: AbstractGenericService
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDomainObject
    nameWithType: TDomainObject
    fullName: TDomainObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDto
    nameWithType: TDto
    fullName: TDto
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Interfaces
  commentId: N:qrAPI.App.Services.Interfaces
  name: qrAPI.App.Services.Interfaces
  nameWithType: qrAPI.App.Services.Interfaces
  fullName: qrAPI.App.Services.Interfaces
- uid: qrAPI.App.Services.Interfaces.IGenericService`1
  commentId: T:qrAPI.App.Services.Interfaces.IGenericService`1
  name: IGenericService<TDomainObject>
  nameWithType: IGenericService<TDomainObject>
  fullName: qrAPI.App.Services.Interfaces.IGenericService<TDomainObject>
  nameWithType.vb: IGenericService(Of TDomainObject)
  fullName.vb: qrAPI.App.Services.Interfaces.IGenericService(Of TDomainObject)
  name.vb: IGenericService(Of TDomainObject)
  spec.csharp:
  - uid: qrAPI.App.Services.Interfaces.IGenericService`1
    name: IGenericService
    nameWithType: IGenericService
    fullName: qrAPI.App.Services.Interfaces.IGenericService
  - name: <
    nameWithType: <
    fullName: <
  - name: TDomainObject
    nameWithType: TDomainObject
    fullName: TDomainObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: qrAPI.App.Services.Interfaces.IGenericService`1
    name: IGenericService
    nameWithType: IGenericService
    fullName: qrAPI.App.Services.Interfaces.IGenericService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDomainObject
    nameWithType: TDomainObject
    fullName: TDomainObject
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.Mapper
  commentId: F:qrAPI.App.Services.Implementations.AbstractGenericService`2.Mapper
  name: Mapper
  nameWithType: AbstractGenericService<TDomainObject, TDto>.Mapper
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>.Mapper
  nameWithType.vb: AbstractGenericService(Of TDomainObject, TDto).Mapper
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto).Mapper
- uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetAllAsync
  commentId: M:qrAPI.App.Services.Implementations.AbstractGenericService`2.GetAllAsync
  name: GetAllAsync()
  nameWithType: AbstractGenericService<TDomainObject, TDto>.GetAllAsync()
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>.GetAllAsync()
  nameWithType.vb: AbstractGenericService(Of TDomainObject, TDto).GetAllAsync()
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto).GetAllAsync()
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetAllAsync
    name: GetAllAsync
    nameWithType: AbstractGenericService<TDomainObject, TDto>.GetAllAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>.GetAllAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetAllAsync
    name: GetAllAsync
    nameWithType: AbstractGenericService(Of TDomainObject, TDto).GetAllAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto).GetAllAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetByIdAsync(System.Guid)
  commentId: M:qrAPI.App.Services.Implementations.AbstractGenericService`2.GetByIdAsync(System.Guid)
  isExternal: true
  name: GetByIdAsync(Guid)
  nameWithType: AbstractGenericService<TDomainObject, TDto>.GetByIdAsync(Guid)
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>.GetByIdAsync(System.Guid)
  nameWithType.vb: AbstractGenericService(Of TDomainObject, TDto).GetByIdAsync(Guid)
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto).GetByIdAsync(System.Guid)
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetByIdAsync(System.Guid)
    name: GetByIdAsync
    nameWithType: AbstractGenericService<TDomainObject, TDto>.GetByIdAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>.GetByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.GetByIdAsync(System.Guid)
    name: GetByIdAsync
    nameWithType: AbstractGenericService(Of TDomainObject, TDto).GetByIdAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto).GetByIdAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.CreateAsync(`0)
  commentId: M:qrAPI.App.Services.Implementations.AbstractGenericService`2.CreateAsync(`0)
  name: CreateAsync(TDomainObject)
  nameWithType: AbstractGenericService<TDomainObject, TDto>.CreateAsync(TDomainObject)
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>.CreateAsync(TDomainObject)
  nameWithType.vb: AbstractGenericService(Of TDomainObject, TDto).CreateAsync(TDomainObject)
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto).CreateAsync(TDomainObject)
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.CreateAsync(`0)
    name: CreateAsync
    nameWithType: AbstractGenericService<TDomainObject, TDto>.CreateAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>.CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TDomainObject
    nameWithType: TDomainObject
    fullName: TDomainObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.CreateAsync(`0)
    name: CreateAsync
    nameWithType: AbstractGenericService(Of TDomainObject, TDto).CreateAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto).CreateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TDomainObject
    nameWithType: TDomainObject
    fullName: TDomainObject
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.UpdateAsync(System.Guid,`0)
  commentId: M:qrAPI.App.Services.Implementations.AbstractGenericService`2.UpdateAsync(System.Guid,`0)
  isExternal: true
  name: UpdateAsync(Guid, TDomainObject)
  nameWithType: AbstractGenericService<TDomainObject, TDto>.UpdateAsync(Guid, TDomainObject)
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>.UpdateAsync(System.Guid, TDomainObject)
  nameWithType.vb: AbstractGenericService(Of TDomainObject, TDto).UpdateAsync(Guid, TDomainObject)
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto).UpdateAsync(System.Guid, TDomainObject)
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.UpdateAsync(System.Guid,`0)
    name: UpdateAsync
    nameWithType: AbstractGenericService<TDomainObject, TDto>.UpdateAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDomainObject
    nameWithType: TDomainObject
    fullName: TDomainObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.UpdateAsync(System.Guid,`0)
    name: UpdateAsync
    nameWithType: AbstractGenericService(Of TDomainObject, TDto).UpdateAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto).UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDomainObject
    nameWithType: TDomainObject
    fullName: TDomainObject
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.DeleteAsync(System.Guid)
  commentId: M:qrAPI.App.Services.Implementations.AbstractGenericService`2.DeleteAsync(System.Guid)
  isExternal: true
  name: DeleteAsync(Guid)
  nameWithType: AbstractGenericService<TDomainObject, TDto>.DeleteAsync(Guid)
  fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>.DeleteAsync(System.Guid)
  nameWithType.vb: AbstractGenericService(Of TDomainObject, TDto).DeleteAsync(Guid)
  fullName.vb: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto).DeleteAsync(System.Guid)
  spec.csharp:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.DeleteAsync(System.Guid)
    name: DeleteAsync
    nameWithType: AbstractGenericService<TDomainObject, TDto>.DeleteAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService<TDomainObject, TDto>.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: qrAPI.App.Services.Implementations.AbstractGenericService`2.DeleteAsync(System.Guid)
    name: DeleteAsync
    nameWithType: AbstractGenericService(Of TDomainObject, TDto).DeleteAsync
    fullName: qrAPI.App.Services.Implementations.AbstractGenericService(Of TDomainObject, TDto).DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Implementations.QrService.#ctor*
  commentId: Overload:qrAPI.App.Services.Implementations.QrService.#ctor
  name: QrService
  nameWithType: QrService.QrService
  fullName: qrAPI.App.Services.Implementations.QrService.QrService
- uid: AutoMapper.IMapper
  commentId: T:AutoMapper.IMapper
  parent: AutoMapper
  isExternal: true
  name: IMapper
  nameWithType: IMapper
  fullName: AutoMapper.IMapper
- uid: qrAPI.DAL.Daos.Interfaces.IRepository{qrAPI.DAL.Dtos.QrDto}
  commentId: T:qrAPI.DAL.Daos.Interfaces.IRepository{qrAPI.DAL.Dtos.QrDto}
  parent: qrAPI.DAL.Daos.Interfaces
  definition: qrAPI.DAL.Daos.Interfaces.IRepository`1
  name: IRepository<QrDto>
  nameWithType: IRepository<QrDto>
  fullName: qrAPI.DAL.Daos.Interfaces.IRepository<qrAPI.DAL.Dtos.QrDto>
  nameWithType.vb: IRepository(Of QrDto)
  fullName.vb: qrAPI.DAL.Daos.Interfaces.IRepository(Of qrAPI.DAL.Dtos.QrDto)
  name.vb: IRepository(Of QrDto)
  spec.csharp:
  - uid: qrAPI.DAL.Daos.Interfaces.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: qrAPI.DAL.Daos.Interfaces.IRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: qrAPI.DAL.Dtos.QrDto
    name: QrDto
    nameWithType: QrDto
    fullName: qrAPI.DAL.Dtos.QrDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: qrAPI.DAL.Daos.Interfaces.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: qrAPI.DAL.Daos.Interfaces.IRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: qrAPI.DAL.Dtos.QrDto
    name: QrDto
    nameWithType: QrDto
    fullName: qrAPI.DAL.Dtos.QrDto
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.Infra.Mail.IMailBroker
  commentId: T:qrAPI.Infra.Mail.IMailBroker
  parent: qrAPI.Infra.Mail
  name: IMailBroker
  nameWithType: IMailBroker
  fullName: qrAPI.Infra.Mail.IMailBroker
- uid: qrAPI.App.Services.Interfaces.IGenericService{qrAPI.App.Domain.Pet}
  commentId: T:qrAPI.App.Services.Interfaces.IGenericService{qrAPI.App.Domain.Pet}
  parent: qrAPI.App.Services.Interfaces
  definition: qrAPI.App.Services.Interfaces.IGenericService`1
  name: IGenericService<Pet>
  nameWithType: IGenericService<Pet>
  fullName: qrAPI.App.Services.Interfaces.IGenericService<qrAPI.App.Domain.Pet>
  nameWithType.vb: IGenericService(Of Pet)
  fullName.vb: qrAPI.App.Services.Interfaces.IGenericService(Of qrAPI.App.Domain.Pet)
  name.vb: IGenericService(Of Pet)
  spec.csharp:
  - uid: qrAPI.App.Services.Interfaces.IGenericService`1
    name: IGenericService
    nameWithType: IGenericService
    fullName: qrAPI.App.Services.Interfaces.IGenericService
  - name: <
    nameWithType: <
    fullName: <
  - uid: qrAPI.App.Domain.Pet
    name: Pet
    nameWithType: Pet
    fullName: qrAPI.App.Domain.Pet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: qrAPI.App.Services.Interfaces.IGenericService`1
    name: IGenericService
    nameWithType: IGenericService
    fullName: qrAPI.App.Services.Interfaces.IGenericService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: qrAPI.App.Domain.Pet
    name: Pet
    nameWithType: Pet
    fullName: qrAPI.App.Domain.Pet
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.App.Services.Interfaces.IIdentityService
  commentId: T:qrAPI.App.Services.Interfaces.IIdentityService
  parent: qrAPI.App.Services.Interfaces
  name: IIdentityService
  nameWithType: IIdentityService
  fullName: qrAPI.App.Services.Interfaces.IIdentityService
- uid: Microsoft.Extensions.Logging.ILogger{qrAPI.App.Services.Implementations.QrService}
  commentId: T:Microsoft.Extensions.Logging.ILogger{qrAPI.App.Services.Implementations.QrService}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<QrService>
  nameWithType: ILogger<QrService>
  fullName: Microsoft.Extensions.Logging.ILogger<qrAPI.App.Services.Implementations.QrService>
  nameWithType.vb: ILogger(Of QrService)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of qrAPI.App.Services.Implementations.QrService)
  name.vb: ILogger(Of QrService)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: qrAPI.App.Services.Implementations.QrService
    name: QrService
    nameWithType: QrService
    fullName: qrAPI.App.Services.Implementations.QrService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: qrAPI.App.Services.Implementations.QrService
    name: QrService
    nameWithType: QrService
    fullName: qrAPI.App.Services.Implementations.QrService
  - name: )
    nameWithType: )
    fullName: )
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: qrAPI.DAL.Daos.Interfaces.IRepository`1
  commentId: T:qrAPI.DAL.Daos.Interfaces.IRepository`1
  name: IRepository<TDto>
  nameWithType: IRepository<TDto>
  fullName: qrAPI.DAL.Daos.Interfaces.IRepository<TDto>
  nameWithType.vb: IRepository(Of TDto)
  fullName.vb: qrAPI.DAL.Daos.Interfaces.IRepository(Of TDto)
  name.vb: IRepository(Of TDto)
  spec.csharp:
  - uid: qrAPI.DAL.Daos.Interfaces.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: qrAPI.DAL.Daos.Interfaces.IRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TDto
    nameWithType: TDto
    fullName: TDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: qrAPI.DAL.Daos.Interfaces.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: qrAPI.DAL.Daos.Interfaces.IRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDto
    nameWithType: TDto
    fullName: TDto
  - name: )
    nameWithType: )
    fullName: )
- uid: qrAPI.DAL.Daos.Interfaces
  commentId: N:qrAPI.DAL.Daos.Interfaces
  name: qrAPI.DAL.Daos.Interfaces
  nameWithType: qrAPI.DAL.Daos.Interfaces
  fullName: qrAPI.DAL.Daos.Interfaces
- uid: qrAPI.Infra.Mail
  commentId: N:qrAPI.Infra.Mail
  name: qrAPI.Infra.Mail
  nameWithType: qrAPI.Infra.Mail
  fullName: qrAPI.Infra.Mail
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: qrAPI.App.Services.Implementations.QrService.ScanQr*
  commentId: Overload:qrAPI.App.Services.Implementations.QrService.ScanQr
  name: ScanQr
  nameWithType: QrService.ScanQr
  fullName: qrAPI.App.Services.Implementations.QrService.ScanQr
- uid: qrAPI.App.Services.Interfaces.IQrService.ScanQr(System.Guid)
  commentId: M:qrAPI.App.Services.Interfaces.IQrService.ScanQr(System.Guid)
  parent: qrAPI.App.Services.Interfaces.IQrService
  isExternal: true
  name: ScanQr(Guid)
  nameWithType: IQrService.ScanQr(Guid)
  fullName: qrAPI.App.Services.Interfaces.IQrService.ScanQr(System.Guid)
  spec.csharp:
  - uid: qrAPI.App.Services.Interfaces.IQrService.ScanQr(System.Guid)
    name: ScanQr
    nameWithType: IQrService.ScanQr
    fullName: qrAPI.App.Services.Interfaces.IQrService.ScanQr
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: qrAPI.App.Services.Interfaces.IQrService.ScanQr(System.Guid)
    name: ScanQr
    nameWithType: IQrService.ScanQr
    fullName: qrAPI.App.Services.Interfaces.IQrService.ScanQr
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
